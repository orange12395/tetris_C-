<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>